apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.kotlin.android.extensions'

ext {
    debug_key_alias = "androiddebugkey"
    debug_key_password = "android"
    debug_keystore_path = "../debug.keystore"
    debug_keystore_password = "android"
}

android {
    compileSdkVersion versions.compileSdk

    Properties properties = new Properties()
    properties.load(project.rootProject.file("local.properties").newDataInputStream())

    defaultConfig {
        applicationId "io.palette"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.code
        versionName versions.name
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        android.defaultConfig.javaCompileOptions.annotationProcessorOptions.includeCompileClasspath = true

        resValue "string", "base_url_unsplash", properties.getProperty("base.url.unsplash", "")
        resValue "string", "unsplash_api_key", properties.getProperty("unsplash.api.key", "")
    }

    signingConfigs {
        debug {
            keyAlias debug_key_alias
            keyPassword debug_key_password
            storeFile file(debug_keystore_path)
            storePassword debug_keystore_password
        }
        release {
            keyAlias properties.getProperty("release.key.alias", "")
            keyPassword properties.getProperty("release.key.password", "")
            storeFile file(properties.getProperty("release.keystore.path", ""))
            storePassword properties.getProperty("release.keystore.password", "")
        }
    }

    buildTypes {
        debug {
            multiDexEnabled true
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            multiDexEnabled true
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility versions.sourceCompat
        targetCompatibility versions.targetCompat
    }
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Android Support Libraries
    implementation deps.support.appcompat
    implementation deps.support.design
    implementation deps.support.cardview
    implementation deps.support.recyclerview
    implementation deps.support.annotations
    implementation deps.support.customtabs
    implementation deps.support.palette
    implementation deps.support.multidex
    implementation deps.others.constraint

    // Dagger
    implementation deps.google.dagger
    kapt deps.google.compiler
    implementation deps.google.dagger_support
    kapt deps.google.processor

    // Rx
    implementation deps.reactivex.rxjava
    implementation deps.reactivex.rxandroid
    implementation deps.reactivex.rxkotlin
    implementation deps.square.rxRelay

    // Retrofit and OkHttp
    implementation deps.square.retrofit
    implementation deps.square.moshi
    implementation deps.square.rxjava2
    implementation deps.square.kotlin
    implementation deps.square.okhttp

    // OkHttp interceptors
    debugImplementation deps.square.okhttpInterceptor
    debugImplementation deps.facebook.stetho
    debugImplementation deps.facebook.okhttp3
    debugImplementation deps.others.chuck

    // Kotlin
    implementation deps.kotlin.stdlib
    implementation deps.kotlin.reflect

    // Android Architecture Component
    implementation deps.androidarch.extensions
    implementation deps.androidarch.viewmodel
    implementation deps.androidarch.livedata
    implementation deps.androidarch.common
    implementation deps.androidarch.reactivestreams
    implementation deps.androidarch.paging
    implementation deps.androidarch.roomRuntime
    kapt deps.androidarch.roomCompiler
    implementation deps.androidarch.roomRxjava2
    testImplementation deps.androidarch.roomTesting

    // Others
    implementation deps.square.timber
    implementation deps.others.glide
    implementation deps.others.progress
    implementation(deps.others.permissions) {
        exclude module: "support-v13"
    }
    kapt deps.others.permissions_processor

    //Firebase
    implementation deps.google.auth
    implementation deps.firebase.core
    implementation deps.firebase.auth
    implementation deps.firebase.firestore
    implementation deps.firebase.uiAuth
    implementation deps.firebase.database
    implementation deps.firebase.messaging

    //Fabric
    implementation(deps.fabric.crashlytics) {
        transitive = true
    }

    //DeepLink
    implementation deps.airbnb.deeplink
    kapt deps.airbnb.deeplinkProcessor

    testImplementation deps.test.junit
    androidTestImplementation deps.test.runner
    androidTestImplementation deps.test.espresso
}

apply plugin: 'com.google.gms.google-services'
repositories {
    mavenCentral()
}